#!/usr/bin/python3

import sys


def to_int(arg):
    try:
        return int(arg)
    except ValueError:
        exit(84)


def to_float(arg):
    try:
        return float(arg)
    except ValueError:
        exit(84)


def beautify_float(value, comma):
    value = float(round(value, comma) + 0.0)

    return value


def error_manager():
    if 2 <= len(sys.argv) <= 4:
        if len(sys.argv) == 2 and sys.argv[1] != "-h":
            exit(84)
        elif len(sys.argv) == 3:
            n = to_int(sys.argv[1])
            k = to_float(sys.argv[2])

            if not n >= 0:
                exit(84)
            if not 1.00 <= k <= 4.00:
                exit(84)
        elif len(sys.argv) == 4:
            n = to_int(sys.argv[1])
            i0 = to_int(sys.argv[2])
            i1 = to_int(sys.argv[3])

            if not n >= 0:
                exit(84)
            if not ((i0 >= 1) and (i1 >= 1)):
                exit(84)
            if not i0 <= i1:
                exit(84)
    else:
        exit(84)


def display_help():
    if sys.argv[1] == "-h":
        print(
            "USAGE" "\n"
            "\t" "./106bombyx n [k | i0 i1]" "\n"
            "\n"
            "DESCRIPTION" "\n"
            "\t" "n" "\t" "number of first generation individuals" "\n"
            "\t" "k" "\t" "growth rate from 1 to 4" "\n"
            "\t" "i0" "\t" "initial generation (included)" "\n"
            "\t" "i1" "\t" "final generation (included)"
        )
        return 1
    return 0


def evolution_calculate(k, xi):
    calc = (k * xi) * (1000 - xi) / 1000

    if calc < 0:
        calc = 0.0
    return calc


def evolution_basic():
    n = to_int(sys.argv[1])
    k = to_float(sys.argv[2])

    for i in range(1, 100 + 1):
        print("{0} {1:.2f}".format(i, n))
        n = evolution_calculate(k, n)
        if n < 0 or n > 999:
            n = 0.00


def evolution_range():
    n = to_int(sys.argv[1])
    i0 = to_int(sys.argv[2])
    i1 = to_int(sys.argv[3])
    r = i1 - i0
    k = 1.00

    while k <= 4.00:
        for i in range(1, i0):
            n = evolution_calculate(k, n)
        for i in range(0, r + 1):
            print("{0:.2f} {1:.2f}".format(k, n))
            n = evolution_calculate(k, n)
        n = to_int(sys.argv[1])
        k += 0.01


def run():
    if len(sys.argv) == 3:
        evolution_basic()
    if len(sys.argv) == 4:
        evolution_range()


def main():
    error_manager()
    if not display_help():
        run()


if __name__ == '__main__':
    main()
